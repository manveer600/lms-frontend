1. If you are on a page and you want to move back on the page on which you were
<span onClick={() => navigate(-1)}> Go Back </span>


2.To upload a picture somewhere
import React, { useState } from "react";

const UploadAndDisplayImage = () => {

  const [selectedImage, setSelectedImage] = useState(null);

  return (
    <div>
      <h1>Upload and Display Image usign React Hook's</h1>

      {selectedImage && (
        <div>
          <img
            alt="not found"
            width={"250px"}
            src={URL.createObjectURL(selectedImage)}
          />
          <br />
          <button onClick={() => setSelectedImage(null)}>Remove</button>
        </div>
      )}

      <br />
      <br />
      
      <input
        type="file"
        name="myImage"
        onChange={(event) => {
          console.log(event.target.files[0]);
          setSelectedImage(event.target.files[0]);
        }}
      />
    </div>
  );
};

export default UploadAndDisplayImage;

                                              
<!--NOTE :- URL.createObjectURL is used to convert a file into it's url so that we can use it as an image    -->
URL.createObjectURL("any file whose url is needed")



3. Thunk: The word "thunk" is a programming term that means "a piece of code that does some delayed work". Rather than execute some logic now, we can write a function body or code that can be used to perform the work later.
<!-- HOW TO WRITE A THUNK -->
const thunkFunction = (dispatch, getState) => {
  // logic here that can dispatch actions or read state
}

store.dispatch(thunkFunction)

<!-- BUT AFTER THE REDUX TOOLKIT IT IS EASIER TO CREATE A THUNK USING createAsyncThunk -->